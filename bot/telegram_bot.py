import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))
import httpx
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message
from dotenv import load_dotenv
from database.whitelist import is_user_allowed
from services.imei_validator import is_valid_imei

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
API_URL = "http://127.0.0.1:8000/api/check-imei"
API_TOKEN = os.getenv("API_TOKEN")

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ IMEI, –∏ —è –ø—Ä–æ–≤–µ—Ä—é –µ–≥–æ!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ IMEI
@dp.message()
async def check_imei(message: Message):
    user_id = message.from_user.id
    imei = message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ
    if not is_user_allowed(user_id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å IMEI
    if not is_valid_imei(imei):
        await message.answer("‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π IMEI! –û–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 15 —Ü–∏—Ñ—Ä –∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –õ—É–Ω–∞.")
        return

    # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –≤ API FastAPI
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(API_URL, json={"imei": imei, "token": API_TOKEN})

        if response.status_code == 200:
            data = response.json()
            text = f"üì± –ë—Ä–µ–Ω–¥: {data['brand']}\nüìå –ú–æ–¥–µ–ª—å: {data['model']}\n‚úÖ –°—Ç–∞—Ç—É—Å: {data['status']}"
        else:
            text = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ IMEI."

    except Exception as e:
        text = f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–≤–µ—Ç
    await message.answer(text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
